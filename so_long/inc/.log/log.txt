=== start of error_lib.h ===

#ifndef ERROR_LIB_H
# define ERROR_LIB_H

#endif
=== end of error_lib.h ===
=== start of map_lib.h ===

#ifndef MAP_LIB_H
# define MAP_LIB_H

/* Includes: */
# include "so_long.h"

/* Types: */
typedef struct s_map_arr
{
	int		x;
	int		y;
	char	**arr;
}	t_map_arr;


/* Macros: */
# define WASD_BITMASK "0123456789abcdef"
# define BITMASK_3 "0101010101010101"
# define BITMASK_6 "0011001100110011"
# define BITMASK_7 "3102310231023102"
# define BITMASK_9 "0000111100001111"
# define BITMASK_B "3131020231310202"
# define BITMASK_C "0000000011111111"
# define BITMASK_D "3333111100002222"
# define BITMASK_E "3311331100220022"
# define BITMASK_F "abcdefghijklmnop"

/* Functions: */


// Internal Map Utils:
int		ft_is_wall(t_map map, int y, int x);
char	ft_prep_wall(t_map map, int y, int x);

#endif
=== end of map_lib.h ===
=== start of parse_lib.h ===

#ifndef PARSE_LIB_H
# define PARSE_LIB_H

/* Includes: */
# include "so_long.h"
# include <stdlib.h>

/* Types: */

typedef struct s_validators
{
	int				flood;
	char			**arr;
	char			**coin_map;
	char			**exit_map;
	unsigned int	error_mask;
	unsigned int	player;
	unsigned int	exit;
	unsigned int	coins;
	int	x;
	int	y;
	int	p_x;
	int	p_y;
}	t_validators;

/* Macros: */

/* Functions: */
void	ft_uniques(t_validators *v);
void	ft_flood_map(t_validators *v);
void	ft_check_ones(t_validators *v);
void	ft_file_check(t_game *game);

#endif
=== end of parse_lib.h ===
=== start of so_long.h ===

#ifndef SO_LONG_H
# define SO_LONG_H

/* Global Includes: */
# include "../../.libft/inc/libftpp.h"
# include "../../minilibx-linux/mlx.h"

/* Types: */

typedef struct s_map
{
	int		x;
	int		y;
	char	**arr;
	char	**layout;
}	t_map;

typedef struct s_assets
{
	char	*map_file;
	void	*a_map[128];
}	t_assets;

typedef struct s_game
{
	int			error_bitmask;
	void		*mlx;
	void		*win;
	t_map		map;
	t_assets	assets;
}	t_game;

typedef enum e_flags
{	
	SUCCESSFUL = 0,
	MALLOCS_ER = 1 << 0,
	BERFILE_ER = 1 << 1,
	MAPFILE_ER = 1 << 2,
	X_VALUE_ER = 1 << 3,
	PLAYERS_ER = 1 << 4,
	EXITPLU_ER = 1 << 5,
	OPENWAL_ER = 1 << 6,
	NOCOINS_ER = 1 << 7,
	LOCKOIN_ER = 1 << 8,
	LOCKEXI_ER = 1 << 9,
	MLXLOAD_ER = 1 << 10
}	t_flags;

/* Macros: */
# define TILE_SIZE 48
# define MAP_ASSETS "!%@$aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPQRSTUvVwWxXyYzZ#"

/* Functions: */
// Pre-game functions:
void	ft_valid_map(t_game *game);

// Boot functions:
void	ft_boot_map(t_game *game);
void	ft_boot_mlx(t_game *game);
void	ft_boot_assets(t_game *game);
void	ft_detail_map(t_map *map);

// Error management:
void	ft_resolve_error(int mask);

// Draw functions:
void	ft_draw_map(t_game *game);
#endif
=== end of so_long.h ===
